[project]
name = "nrkdownload"
dynamic = ["version"]
description = ""
authors = [{ name = "Martin HÃ¸y", email = "martin@hoy.priv.no" }]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "loguru>=0.7.3",
    "pydantic>=2.10.6",
    "typer>=0.15.1",
    "requests>=2.32.3",
    "python-ffmpeg>=2.0.12",
]


[dependency-groups]
docs = ["sphinx>=7.1.2", "sphinx-rtd-theme>=3.0.2"]
dev = [
    "ipykernel>=6.29.5",
    "nox>=2025.2.9",
    "pre-commit>=3.5.0",
    "pytest>=8.3.4",
    "pytest-cov>=5.0.0",
    "types-requests>=2.32.0.20241016",
]

[project.scripts]
nrkdownload = "nrkdownload.cli:app"

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

# FIXME: temporary workaround until https://github.com/pypa/setuptools/issues/4759 is fixed
[tool.setuptools]
license-files = []

[tool.setuptools_scm]
# Use the git tags to determine the version

[tool.ruff]
# Consider packages in the src directory as first-party code
src = ["src"]

# Run ruff on Notebooks as well
extend-include = ["*.ipynb"]

[tool.ruff.lint.per-file-ignores]
# Allow the use of assert in tests
"tests/*" = ["S101"]

[tool.ruff.lint]
select = [
    "F",   # Pyflakes
    "E",   # pycodestyle
    "W",   # pycodestyle
    "C90", # mccabe
    "I",   # isort
    "ICN", # flake8-import-conventions
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ANN", # flake8-annotations
    "S",   # flake8-bandit
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "FA",  # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "PT",  # flake8-pytest-style
    "Q",   # flake8-quotes
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "PD",  # pandas-vet
    "PLC", # Pylint convention
    "PLE", # Pylint error
    # "PLR",  # Pylint refactor
    "NPY",  # NumPy
    "FAST", # FastAPI
    "RUF",  # Ruff-specific rules
]
ignore = []

[tool.ruff.lint.pydocstyle]
convention = "google"


# mypy configuration, taken from pydantic documentation
[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


[tool.pytest.ini_options]
addopts = "--verbose --cov-report term-missing:skip-covered --cov=nrkdownload"
markers = [
    "download: tests that downloads content (deselect with '-m \"not download\"')",
]
# Ignore deprecation warnings from third party packages
filterwarnings = ["ignore::DeprecationWarning:past.*"]
